name: Build PR Image
on:
  pull_request:
    types: [opened,synchroize,reopened,closed]

jobs:

  build-application:
    name: Build and Push `application`
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
      - name: Generate UUID image name
        id: uuid
        run: echo "UUID_TAG_APP=$(uuidgen)" >> $GITHUB_ENV
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/girlguidingstaplehurst/crater:{{ env.UUID_TAG_APP }}
          tags: type=raw,value=60d
      - name: Build and Push Image to ghcr.io registry
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ./uffizzi/Dockerfile

  build-nginx:
    needs: 
      - build-application
    name: Build and Push `nginx`
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || github.event.action != 'closed' }}
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2        
      - name: Generate UUID image name
        id: uuid
        run: echo "UUID_TAG_NGINX=$(uuidgen)" >> $GITHUB_ENV
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/girlguidingstaplehurst/crater-nginx:${{ env.UUID_TAG_NGINX }}
          tags: type=raw,value=60d
      - name: Build and Push Image to ghcr.io registry
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ./uffizzi/nginx/Dockerfile
          build-args: |
            BASE_IMAGE=${{ needs.build-application.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


  build-crond:
    name: Build and Push `crond`
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || github.event.action != 'closed' }}
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2        
      - name: Generate UUID image name
        id: uuid
        run: echo "UUID_TAG_CROND=$(uuidgen)" >> $GITHUB_ENV
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/girlguidingstaplehurst/crater-crond:${{ env.UUID_TAG_CROND }}
          tags: type=raw,value=60d
      - name: Build and Push Image to registry.uffizzi.com ephemeral registry
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ./uffizzi/crond/Dockerfile      
          cache-from: type=gha
          cache-to: type=gha,mode=max

